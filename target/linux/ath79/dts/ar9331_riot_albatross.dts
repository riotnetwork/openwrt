// SPDX-License-Identifier: GPL-2.0
/dts-v1/;

#include <dt-bindings/gpio/gpio.h>
#include <dt-bindings/input/input.h>

#include "ar9331.dtsi"

/ {
	model = "RIOT Albatross";
	compatible = "riot,albatross", "qca,ar9331";

	aliases {
		serial0 = &uart;
		led-boot = &led_system;
		led-failsafe = &led_system;
		led-running = &led_system;
		led-upgrade = &led_system;
	};

	leds {
		compatible = "gpio-leds";
		pinctrl-names = "default";
		pinctrl-0 = <&switch_led_pins>;

		led_system: system {
			label = "alba:red:system";
			gpios = <&gpio 1 GPIO_ACTIVE_HIGH>;
			default-state = "on";
		};

 		wlan {
                         label = "alba:red:wlan";
                         gpios = <&gpio 0 GPIO_ACTIVE_HIGH>;
                         default-state = "off";
			 linux,default-trigger = "phy0tpt";
                };
 
            	lan {
                         label = "alba:red:lan";
                         gpios = <&gpio 17 GPIO_ACTIVE_LOW>;
                         default-state = "off";
                };
 
	};

	gpio-export {
 		compatible = "gpio-export";
		pinctrl-names = "default";
		pinctrl-0 = <&mdio_gpio &jtag_disable_pins &jumpstart_disable>;

		gpio_GPS_reset {
			gpio-export,name = "GPS-Reset";
			gpio-export,output = <1>; // init high
			gpio-export,direction_may_change;
			gpios = <&gpio 6 GPIO_ACTIVE_HIGH>;
			
		};
		gpio_rf_enable {
			gpio-export,name = "RF-Enable";
			gpio-export,output = <0>; // init low
			gpio-export,direction_may_change;
			gpios = <&gpio 7 GPIO_ACTIVE_HIGH>;
		};
		gpio_mixer_reset {
			gpio-export,name = "Mixer-Reset";
			gpio-export,output = <0>; // init low
			gpio-export,direction_may_change;
			gpios = <&gpio 18 GPIO_ACTIVE_HIGH>;
		};
		gpio_mixer_enable {
			gpio-export,name = "Mixer-Enable";
			gpio-export,output = <0>; // init low
			gpio-export,direction_may_change;
			gpios = <&gpio 19 GPIO_ACTIVE_HIGH>;
		};
		gpio_mixer_mode {
			gpio-export,name = "Mixer-Mode";
			gpio-export,output = <0>; // init low
			gpio-export,direction_may_change;
			gpios = <&gpio 20 GPIO_ACTIVE_HIGH>;
		};
		gpio_LDO_enable {
			gpio-export,name = "Mixer-LDO";
			gpio-export,output = <0>; // init low
			gpio-export,direction_may_change;
			gpios = <&gpio 21 GPIO_ACTIVE_HIGH>;
		};
	};

};

&ref {
	clock-frequency = <25000000>;
};

&uart {
	status = "okay";
};

&gpio {
	status = "okay";
};

&usb {
	dr_mode = "host";
	status = "okay";
};

&usb_phy {
	status = "okay";
};

&spi {
	num-chipselects = <1>;
	status = "okay";

	/* Winbond 25Q128FVSG SPI flash */
	flash@0 {
		compatible = "jedec,spi-nor";
		spi-max-frequency = <104000000>;
		reg = <0>;
		partitions {
                          compatible = "fixed-partitions";
                          #address-cells = <1>;
                          #size-cells = <1>;
  
                          partition@0 {
                                  label = "u-boot";
                                  reg = <0x000000 0x040000>;
                                  read-only;
                          };
  
                          partition@1 {
                                  label = "u-boot-env";
                                  reg = <0x040000 0x010000>;
                          };
  
                          partition@2 {
                                  label = "firmware";
                                  reg = <0x050000 0xfa0000>;
                          };
  
                          art: partition@3 {
                                  label = "ART";
                                  reg = <0xff0000 0x010000>;
                                  read-only;
                          };
                  };
	};
};


&eth0 {
	status = "okay";
	mtd-mac-address = <&art 0x1002>;
	mtd-mac-address-increment-byte = <4>;
	mtd-mac-address-increment = <(-1)>;
};

&eth1 {
	status = "okay";
	mtd-mac-address = <&art 0>;
	mtd-mac-address-increment = <1>;
};

&wmac {
	status = "okay";
	mtd-cal-data = <&art 0x1000>;
	mtd-mac-address = <&art 0x1002>;
};

&switch_led_pins{
	// disable switch controlled LEDs to use them as regular GPIO,  <offset value mask>;
	pinctrl-single,bits = <0x0 0x0 0xf8>;
};


